class TransformationMatrix{constructor(){this.x=0,this.y=0,this.z=0,this.a=1,this.b=1,this.c=1}translate(d,f,g){this.x+=d,this.y+=f,this.z+=g}setTranslation(d,f,g){this.x=d,this.y=f,this.z=g}scale(d,f,g){this.a*=d,this.b*=f,this.c*=g}setScale(d,f,g){this.a=d,this.b=f,this.c=g}setCompleteScale(d){this.a=d,this.b=d,this.c=d}getMatrixAsArray(){return[this.a,0,0,this.x,0,this.b,0,this.y,0,0,this.c,this.z,0,0,0,1]}}function fljs_fragment_shader_rect(){return`#version 300 es
    
    precision mediump float;

    uniform vec4 bg_color;
    
    in vec4 color;
    out vec4 outColor;
    
    void main(void) 
    {
        vec4 sp = color * 1.1;
        vec4 slideColor = vec4(0,0,0,0);
        
        slideColor = mix(slideColor, bg_color, smoothstep(0.8,1.0, abs(sp.x)));
        slideColor = mix(slideColor, bg_color, smoothstep(0.8,1.0, abs(sp.y)));
        outColor = slideColor;
        
    }
    `}function fljs_fragment_shader_rect_real(){return`#version 300 es
    
    precision mediump float;

    uniform vec4 bg_color;
    
    in vec4 color;
    out vec4 outColor;
    
    void main(void) 
    {
        vec4 sp = color * 1.1;

        float steps[6] = float[6](0.0,0.80,0.91,0.93,0.95,0.96);
        
        vec4 colors[5] = vec4[5](
            vec4(0),
            vec4(0,0,0.5,0.0125),
            vec4(0.1098,0.2471,0.3255,0.3666),
            vec4(0.4745,0.3686,0.5255, 0.6),
            bg_color
            );
        
        vec4 mash_color = colors[0];
        
        for(int i=0;i < colors.length();i++)
        {   
            mash_color = mix(mash_color, colors[i], smoothstep(steps[i],steps[i+1], abs(sp.x)));
            mash_color = mix(mash_color, colors[i], smoothstep(steps[i],steps[i+1], abs(sp.y)));
        }
        
        outColor = mash_color;
        
        vec4 slideColor = vec4(0,0,0,0);
        
        slideColor = mix(slideColor, bg_color, smoothstep(0.78,1.0, abs(sp.x)));
        slideColor = mix(slideColor, bg_color, smoothstep(0.78,1.0, abs(sp.y)));
        outColor = mix( mash_color,slideColor, 0.85);
        
    }
    `}function fljs_fragment_shader_real(){return`#version 300 es
    
    precision mediump float;

    uniform vec4 bg_color;
    
    in vec4 color;
    out vec4 outColor;
    
    void main(void) 
    {
        vec4 sp = color * 1.0;
        
        float visibility = clamp(pow((distance(sp.xy, vec2(0,0))), 0.6), 0.0,1.0);
        
        float steps[6] = float[6](0.0,0.83,0.88,0.93,0.96,1.0);
        
        vec4 colors[6] = vec4[6](
            vec4(0),
            vec4(0),
            vec4(0,0,1,0.0125),
            vec4(0.1098,0.2471,0.5255,0.5666),
            vec4(0.4745,0.3686,0.5255,1),
            vec4(0.4745,0.3686,0.5255,0.75));
        
        vec4 mash_color = colors[0];
        
        for(int i=1;i < steps.length();i++)
        {   
            mash_color = mix(mash_color, colors[i], smoothstep(steps[i-1],steps[i], (distance(sp.xy, vec2(0,0)))));
        }
        
        vec4 slideColor = vec4(0,0,0,0);
        
        slideColor = mix(slideColor, bg_color, smoothstep(0.78,1.0, (distance(sp.xy, vec2(0,0)))));
        
        outColor = mix( mash_color,slideColor, visibility);
        
    }
    `}function fljs_fragment_shader_real_simple(){return`#version 300 es
    
    precision mediump float;

    uniform vec4 bg_color;
    
    in vec4 color;
    out vec4 outColor;
    
    void main(void) 
    {
        vec4 sp = color * 1.1;
        vec4 slideColor = vec4(0,0,0,0);
        
        slideColor = mix(slideColor, bg_color, smoothstep(0.78,1.0, (distance(sp.xy, vec2(0,0)))));
        outColor = slideColor;
        
    }
    `}function fljs_vertex_shader(){return`#version 300 es
    
    in vec2 aVertexPosition;
    uniform mat4 transformationMatrix;
    
    out vec4 color;

    void main(void)
    {
        color = vec4(aVertexPosition, 0.0, 1.0);
        gl_Position = color * transformationMatrix;
    }
    `}function setUniformTransformationMatrix(d,f,g){d.useProgram(f);let h=d.getUniformLocation(f,"transformationMatrix");d.uniformMatrix4fv(h,!1,new Float32Array(g))}function setUniformBGColor(d,f,g){d.useProgram(f);let h=d.getUniformLocation(f,"bg_color");d.uniform4fv(h,new Float32Array(g))}let transformationMatrix=new TransformationMatrix,square,simpelShader,realShader,simpelRectShader,realRectShader;function loadShader(d,f,g){let h="fragment"===g?d.createShader(d.FRAGMENT_SHADER):"vertex"===g?d.createShader(d.VERTEX_SHADER):null;return null==h?null:(d.shaderSource(h,window[f]()),d.compileShader(h),d.getShaderParameter(h,d.COMPILE_STATUS)?h:(console.log("Shader Compilation failed: "+f+d.getShaderInfoLog(h)),null))}function initShaderProgram(d,f){let g=loadShader(d,f,"fragment"),h=loadShader(d,"fljs_vertex_shader","vertex"),i=d.createProgram();d.attachShader(i,h),d.attachShader(i,g),d.linkProgram(i),d.getProgramParameter(i,d.LINK_STATUS)||console.log("Shader initialisation failed: "+f),d.useProgram(i);let j=d.getAttribLocation(i,"aVertexPosition");return d.enableVertexAttribArray(j),i}function initSquareBuffer(d){let f=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,f);return d.bufferData(d.ARRAY_BUFFER,new Float32Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0]),d.STATIC_DRAW),f}function getCurrentShader(){return 1===fl_type?simpelShader:2===fl_type?realShader:4===fl_type?realShader:5===fl_type?simpelRectShader:6===fl_type?realRectShader:7===fl_type?simpelRectShader:8===fl_type?realRectShader:simpelShader}let drawWebGL2=function(d){let f=getCurrentShader(),g=-(window.innerWidth/2-fl_data.x)/(window.innerWidth/2),h=(window.innerHeight/2-fl_data.y)/(window.innerHeight/2);transformationMatrix.setTranslation(g,h,0);let i=fl_data.size/fl_data.default;transformationMatrix.setScale(i,i*fl_data.height,i),d.useProgram(f),d.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT),setUniformTransformationMatrix(d,f,transformationMatrix.getMatrixAsArray()),d.bindBuffer(d.ARRAY_BUFFER,square),d.vertexAttribPointer(d.getAttribLocation(f,"aVertexPosition"),3,d.FLOAT,!1,0,0),d.drawArrays(d.TRIANGLE_STRIP,0,4)};function initWebGL(d){let f=d.getContext("webgl2");return f?(console.log("JS Flashlight using WebGL2"),draw=drawWebGL2,fl_data.size=40,fl_type=3,f.clearColor(0.375,0.375,0.375,0.6875),f.clear(f.COLOR_BUFFER_BIT),square=initSquareBuffer(f),simpelShader=initShaderProgram(f,"fljs_fragment_shader_real_simple"),realShader=initShaderProgram(f,"fljs_fragment_shader_real"),simpelRectShader=initShaderProgram(f,"fljs_fragment_shader_rect"),realRectShader=initShaderProgram(f,"fljs_fragment_shader_rect_real"),transformationMatrix.setCompleteScale(fl_data.size/200),setUniformBGColor(f,simpelShader,[0.375,0.375,0.375,0.6875]),setUniformBGColor(f,realShader,[0.375,0.375,0.375,0.6875]),setUniformBGColor(f,simpelRectShader,[0.375,0.375,0.375,0.6875]),setUniformBGColor(f,realRectShader,[0.375,0.375,0.375,0.6875]),f):(console.log("JS Flashlight: No WebGL2 context found"),!1)}document.addEventListener("mousemove",onMouseMove,!1),document.addEventListener("keyup",onKeyUp,!1),document.addEventListener("keydown",onKeyDown,!1),window.addEventListener("resize",onWindowResize,!1),document.addEventListener("mousewheel",onMousewheel,!1),document.addEventListener("DOMMouseScroll",onMousewheel,!1);let pressed_keys=[],fl_active=!1,fl_type=2,fl_data={x:-1,y:-1,size:150,"default":150,height:1},draw,drawCanvas2D=function(d){0<=fl_type&&drawBackground(d),1<=fl_type&&drawSimpleFl(d),2<=fl_type&&drawRealShadow(d)},canvas_fl=createCanvas(),ctx=!1;"function"==typeof initWebGL&&(ctx=initWebGL(canvas_fl),window.addEventListener("resize",function(){ctx.viewport(0,0,canvas_fl.width,canvas_fl.height)},!1)),ctx||(ctx=initCanvas2D());function initCanvas2D(){console.log("JS Flashlight using Canvas 2D");let d=canvas_fl.getContext("2d");return draw=drawCanvas2D,d}function onMousewheel(d){if(fl_active){let f=Math.max(-1,Math.min(1,d.wheelDelta||-d.detail));if(d.shiftKey&&!d.altKey)fl_data.size+=4*f;else if(d.altKey&&!d.shiftKey)fl_data.height+=0.05*f;else if(d.shiftKey&&d.altKey)fl_data.size-=1.1*f,fl_data.height+=0.2*f;else return void draw(ctx);d.preventDefault(),draw(ctx)}}function onKeyUp(d){if(pressed_keys[d.keyCode]=0,"g"===d.key){let f=window.getComputedStyle(canvas_fl),g=f.getPropertyValue("opacity");0==g?(canvas_fl.style.opacity="1",fl_active=!0):(canvas_fl.style.opacity="0",setTimeout(function(){fl_active=!1},500))}}function onKeyDown(d){pressed_keys[d.keyCode]=1,swapFlModes(d.key)}function isKeyDown(d){return 1===pressed_keys[d.charCodeAt(0)]}function swapFlModes(d){"0"===d?(fl_type=0,fl_data.height=1):"1"===d?(fl_type=1,fl_data.height=window.innerWidth/window.innerHeight):"2"===d?(fl_type=2,fl_data.height=window.innerWidth/window.innerHeight):"3"===d?(fl_type=3,fl_data.height=1):"4"===d?(fl_type=4,fl_data.height=1):"5"===d?(fl_type=5,fl_data.height=1):"6"===d?(fl_type=6,fl_data.height=1):"7"===d?(fl_type=7,fl_data.height=window.innerWidth/window.innerHeight):"8"===d?(fl_type=8,fl_data.height=window.innerWidth/window.innerHeight):void 0;draw(ctx)}function onMouseMove(d){fl_active&&(fl_data.x=d.clientX,fl_data.y=d.clientY,draw(ctx))}function drawRealShadow(d){d.beginPath(),d.globalCompositeOperation="source-over";let f=d.createRadialGradient(fl_data.x,fl_data.y,0,fl_data.x,fl_data.y,fl_data.size);f.addColorStop(0,"#0000"),f.addColorStop(0.83,"#0000"),f.addColorStop(0.88,"#00f1"),f.addColorStop(0.93,"#1c3f8644"),f.addColorStop(0.96,"#795e8688"),f.addColorStop(1,"#795e8600"),d.fillStyle=f,d.arc(fl_data.x,fl_data.y,fl_data.size,0,2*Math.PI,!1),d.fill()}function drawSimpleFl(d){d.beginPath(),d.globalCompositeOperation="destination-out";let f=d.createRadialGradient(fl_data.x,fl_data.y,0,fl_data.x,fl_data.y,fl_data.size);f.addColorStop(0,"white"),f.addColorStop(0.78,"white"),f.addColorStop(1,"transparent"),d.fillStyle=f,d.arc(fl_data.x,fl_data.y,fl_data.size,0,2*Math.PI,!1),d.fill()}function drawBackground(d){d.globalCompositeOperation="source-over",d.clearRect(0,0,canvas_fl.width,canvas_fl.height),d.fillStyle="#666b",d.fillRect(0,0,canvas_fl.width,canvas_fl.height)}function onWindowResize(){canvas_fl.width=window.innerWidth,canvas_fl.height=window.innerHeight,draw(ctx)}function createCanvas(){let d=document.createElement("canvas");return d.style.position="fixed",d.style.left="0",d.style.top="0",d.style.opacity="0",d.style.transition="all 0.5s ease-in-out",d.style.zIndex="2147483647",d.style.pointerEvents="none",d.style.background="transparent",d.width=window.innerWidth,d.height=window.innerHeight,document.body.appendChild(d),d}